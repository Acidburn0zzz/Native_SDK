#version 450
// Autogenerated

// Note that we generally use #version 320 es however this compute shader makes use of an image load store format not supported by es profiles
// Support for this format is queried appropriately and this shader is then only used in that case 

// Weights and Offsets generated using generateGaussianCoefficients and generateGaussianWeightsAndOffsetsStrings()
// Number of iterations
// Example: const uint numIterations = 3;
%s
// Weights used for the Gaussian Blur
// Example: const mediump float gWeights[numIterations] = {0.25, 0.5, 0.25};
%s

layout(set = 0, binding = 0) uniform mediump sampler2D sTexture;

layout(location = 0) in mediump vec2 vTexCoords[numIterations];

layout(location = 0) out mediump float oColor;

void main()
{
	mediump float colorOut = 0.0;

	for(uint i = 0u; i < numIterations; ++i)
	{
		colorOut += gWeights[i] * texture(sTexture, vTexCoords[i]).r;
	}
	oColor = colorOut;
}