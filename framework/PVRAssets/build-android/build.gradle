apply plugin: 'com.android.library'

def frameworkProjects = ["PVRCore"]

android {
	compileSdkVersion 28
	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 26
		versionCode 1
		versionName "1.0"
		externalNativeBuild {
			cmake {
				cppFlags "-fexceptions"
				arguments "-DANDROID_STL=c++_static", "-DUSE_PREBUILT_DEPENDENCIES=ON"
				targets "PVRAssets"
			}
		}
		ndk
		{
			abiFilters "$ANDROID_ABI".replace(" ", "").split(",")
		}
	}
	externalNativeBuild {
		cmake {
			path "../CMakeLists.txt"
		}
	}
}

buildscript {
	repositories {
		google()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.3.0'
	}
}

// This block specifies dependencies required to build only the module itself
dependencies {
	// Add the dependencies to the external modules
	frameworkProjects.each { 
		s-> implementation project(":${s}")
	}
}

tasks.whenTaskAdded { task -> 	
	// Workaround library native code dependency issue in gradle
	// This should normally be handled by the dependencies above: (implementation project(':...'))
	// refer to https://issuetracker.google.com/issues/69616088.
	// We add a dependency on all framework projects' corresponding externalNativeBuild tasks - If these lines are removed, the framework is not built as it should be.
	if (task.name == 'generateJsonModelRelease') {
		frameworkProjects.each {s -> task.dependsOn ":${s}:externalNativeBuildRelease" }
	} else if (task.name == 'generateJsonModelDebug') {
		frameworkProjects.each {s -> task.dependsOn ":${s}:externalNativeBuildDebug" }
	}
}

allprojects {
	repositories {
		google()
		jcenter()
	}
}
