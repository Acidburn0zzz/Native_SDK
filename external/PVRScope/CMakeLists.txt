cmake_minimum_required(VERSION 3.3)

if(NOT TARGET PVRScopeDeveloper OR NOT TARGET PVRScopeDeveloperShared)
	# Create an imported target for PVRScopeDeveloper
	add_library(PVRScopeDeveloper STATIC IMPORTED GLOBAL)
	add_library(PVRScopeDeveloperShared SHARED IMPORTED GLOBAL)

	if(WIN32)
		set(PVR_SCOPE_STATIC_LIBRARY_PREFIX "")
		set(PVR_SCOPE_STATIC_LIBRARY_SUFFIX ".lib")
		set(PVR_SCOPE_SHARED_LIBRARY_PREFIX "")
		set(PVR_SCOPE_SHARED_LIBRARY_SUFFIX ".dll")
	else()
		set(PVR_SCOPE_STATIC_LIBRARY_PREFIX "${CMAKE_STATIC_LIBRARY_PREFIX}")
		set(PVR_SCOPE_STATIC_LIBRARY_SUFFIX "${CMAKE_STATIC_LIBRARY_SUFFIX}")
		set(PVR_SCOPE_SHARED_LIBRARY_PREFIX "${CMAKE_SHARED_LIBRARY_PREFIX}")
		set(PVR_SCOPE_SHARED_LIBRARY_SUFFIX "${CMAKE_SHARED_LIBRARY_SUFFIX}")
	endif()

	if(WIN32)
		set(PVR_SCOPE_LIB_FOLDER "${CMAKE_CURRENT_LIST_DIR}/../../lib/Windows_x86_${PROJECT_ARCH}")
	elseif(ANDROID)
		set(PVR_SCOPE_LIB_FOLDER "${CMAKE_CURRENT_LIST_DIR}/../../lib/Android_${ANDROID_ABI}")
	elseif(APPLE)
		if(IOS)
			set(PLATFORM_FOLDER iOS)
		else()
			set(PLATFORM_FOLDER macOS_x86)
		endif()
		set(PVR_SCOPE_LIB_FOLDER "${CMAKE_CURRENT_LIST_DIR}/../../lib/${PLATFORM_FOLDER}")
	elseif(UNIX)
		set(PVR_SCOPE_LIB_FOLDER "${CMAKE_CURRENT_LIST_DIR}/../../lib/${CMAKE_SYSTEM_NAME}_${CMAKE_SYSTEM_PROCESSOR}")
	endif()

	set_target_properties(PVRScopeDeveloper PROPERTIES
		IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
		INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_LIST_DIR}/../../include"
		IMPORTED_LOCATION "${PVR_SCOPE_LIB_FOLDER}/${PVR_SCOPE_STATIC_LIBRARY_PREFIX}PVRScopeDeveloper${PVR_SCOPE_STATIC_LIBRARY_SUFFIX}")
	set_target_properties(PVRScopeDeveloperShared PROPERTIES
		IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
		INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_LIST_DIR}/../../include"
		IMPORTED_LOCATION "${PVR_SCOPE_LIB_FOLDER}/${PVR_SCOPE_SHARED_LIBRARY_PREFIX}PVRScopeDeveloper${PVR_SCOPE_SHARED_LIBRARY_SUFFIX}")
endif()